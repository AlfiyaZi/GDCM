#!/usr/bin/make -f

package=scribus
CMAKE=/usr/bin/cmake

#export DH_VERBOSE=1
DEBUG_FLAG=0

DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

DEBIAN_DIR = $(shell pwd)/debian
BUILD_DIR = $(shell pwd)/debian/build
INSTALL_DIR = $(shell pwd)/debian/scribus
DOC_DIR = $(INSTALL_DIR)/usr/share/doc/scribus
SCRIPTS_DIR = $(INSTALL_DIR)/usr/share/scribus/scripts
PATCH_DIR = $(DEBIAN_DIR)/patches
patches = $(shell ls $(PATCH_DIR) | sort)
rev_patches = $(shell ls $(PATCH_DIR) | sort -r)

ifeq ($(DEB_HOST_GNU_TYPE), alpha-linux)
OPT_FLAG = -O0
else
OPT_FLAG = -O2
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
OPT_FLAG = -O0
endif

OPT_FLAG += -g -Wall

#ifeq (,$(findstring parallelbuild,$(DEB_BUILD_OPTIONS)))
#MAKE_FLAG = -j5
#else
#MAKE_FLAG =
#endif


patch-stamp:
	dpatch apply-all
	touch patch-stamp

unpatch:
	dpatch deapply-all
	rm -rf patch-stamp debian/patched

configure-stamp:
	echo "DEB_BUILD_OPTIONS: ${DEB_BUILD_OPTIONS}"
	dh_testdir
	mkdir -p $(BUILD_DIR)
	cd $(BUILD_DIR) && $(CMAKE) \
	    -DWANT_DEBUG:STRING=$(DEBUG_FLAG) \
	    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
	    -DCMAKE_SKIP_RPATH:BOOL=1 \
	    -DRPATH_STYLE:STRING=none \
	    -DWANT_VERSIONING:BOOL=0 \
	    -DCMAKE_CXX_FLAGS:STRING='$(OPT_FLAG)' \
	    -DWANT_LIB32:BOOL=1 \
	    -DCMAKE_C_FLAGS:STRING='$(OPT_FLAG)' ../../
	touch configure-stamp
//	    -DCUSTOM_VERSIONTAG:STRING=\

build: patch-stamp configure-stamp build-stamp
build-stamp:
	dh_testdir
	dh_clean
	$(MAKE) $(MAKE_FLAG) -C $(BUILD_DIR)
	touch build-stamp

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
#	[ ! -d $(CURDIR)/debian/build ] || $(MAKE) $(MAKE_FLAG) -C $(BUILD_DIR) clean
	rm -f configure-stamp build-stamp install-stamp
	rm -rf $(BUILD_DIR) $(INSTALL_DIR)
	dh_clean

install: install-stamp
install-stamp: build-stamp
	dh_testdir
	dh_testroot
	dh_clean
	dh_installdirs
	dh_install
	mkdir -p $(INSTALL_DIR)
	$(MAKE) $(MAKE_FLAG) -C $(BUILD_DIR) install DESTDIR=$(INSTALL_DIR)
	mv $(INSTALL_DIR)/usr/share/scribus/scripts/ChangeLog $(INSTALL_DIR)/usr/share/doc/scribus/ChangeLogScripts
	cp $(INSTALL_DIR)/usr/share/scribus/icons/scribusicon.png $(INSTALL_DIR)/usr/share/pixmaps/scribus.png
	rm -f $(DOC_DIR)/ChangeLogSVN \
	$(DOC_DIR)/AUTHORS \
	$(DOC_DIR)/BUILDING \
	$(DOC_DIR)/changelog \
	$(DOC_DIR)/BUILDING \
	$(DOC_DIR)/PACKAGING \
	$(DOC_DIR)/NEWS \
	$(DOC_DIR)/TODO \
	$(DOC_DIR)/INSTALL \
	$(DOC_DIR)/README.MacOSX \
	$(DOC_DIR)/README.OS2 \
	$(DOC_DIR)/COPYING \
	$(SCRIPTS_DIR)/COPYING \
	$(SCRIPTS_DIR)/NEWS \
	$(SCRIPTS_DIR)/ReadMe \
	$(SCRIPTS_DIR)/TODO \
	$(INSTALL_DIR)/usr/share/applications/vnd.scribus.desktop
	mv $(INSTALL_DIR)/usr/share/man/man1/scribus.1.de \
		$(INSTALL_DIR)/usr/share/man/de/man1/scribus.1
	chmod 755 $(INSTALL_DIR)/usr/share/scribus/samples/*.py
	install -m644 debian/scribus.lintian $(INSTALL_DIR)/usr/share/lintian/overrides/scribus
	touch install-stamp


binary-indep: build install
	dh_testdir
	dh_testroot


binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs -a README AUTHORS TODO
	dh_installmenu -a
	dh_installman -a
	dh_installchangelogs ChangeLog
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	chmod 755 $(INSTALL_DIR)/usr/lib/scribus/plugins/*.so
	chmod 755 $(INSTALL_DIR)/usr/lib/scribus/plugins/*/*.so
	dh_installdeb -a
	dh_desktop -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

.PHONY: binary clean binary-indep binary-arch binary install
