# appveyor file
# http://www.appveyor.com/docs/appveyor-yml

# Set build version format here instead of in the admin panel.
version: 2.7.0.{build}

# http://www.appveyor.com/docs/build-cache#caching-chocolatey-packages
cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

environment:
  matrix:
  - VS_GEN: Visual Studio 14 2015
    CONFIG: RelWithDebInfo
    B_NAME: Win32
#  - VS_GEN: Visual Studio 14 2015 Win64
#    CONFIG: Release
#    B_NAME: Win64
#  - VS_GEN: MinGW Makefiles
#    CONFIG: None
#    B_NAME: MinGW
#  - VS_GEN: MSYS Makefiles
#    CONFIG: None
#    B_NAME: Msys
#  - VS_GEN: Visual Studio 14 2015 ARM
#    CONFIG: Debug
#    B_NAME: ARM

matrix:
  fast_finish: true

# Operating system (build VM template)
os: Visual Studio 2015
branches:
  except:
  - coverity_scan
skip_tags: true

# scripts that are called at very beginning, before repo cloning
init:
  # Print environment info
  #- set
  - msbuild /version
  - cmake --version
  - python --version
  - java -version
  # https://github.com/chocolatey/chocolatey/issues/431
  - cmake -E remove -f c:\programdata\chocolatey\bin\cpack.exe

# check ninja ? 

# scripts that run after cloning repository
install:
  # Fetch submodules
  #- git submodule update --init --recursive
  - choco install swig
  - swig -version
  # https://chocolatey.org/packages/nsis.install/
  # the other one does not seems to be supported
  - choco install nsis.install -pre
  - choco install ninja

# scripts to run before build
before_build:
  - cmake -Wno-dev -G"%VS_GEN%" -DCMAKE_BUILD_TYPE=%CONFIG% -DGDCM_BUILD_TESTING:BOOL=ON -DGDCM_BUILD_APPLICATIONS:BOOL=ON -DGDCM_BUILD_SHARED_LIBS:BOOL=ON -DGDCM_ALLOW_INSOURCE_BUILD:BOOL=ON -DBUILDNAME:STRING=%COMPUTERNAME%-%B_NAME% -DGDCM_WRAP_CSHARP:BOOL=ON -DGDCM_WRAP_JAVA:BOOL=ON -DGDCM_WRAP_PYTHON:BOOL=ON -DGDCM_USE_PVRG:BOOL=ON -DGDCM_JAVA_SOURCE_VERSION:STRING=1.7 -DGDCM_JAVA_TARGET_VERSION:STRING=1.7 .
  - ctest -D ExperimentalStart -C %CONFIG%

# scripts to run after build
after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
  - echo %CONFIG%
  # NUMBER_OF_PROCESSORS=2
  # Do not run Test=Update/Configure, only Start/Build/Test/Submit (TODO: Coverage)
  - ctest -D ExperimentalBuild -j2 -C %CONFIG%

# scripts to run before tests
before_test:
  - echo script1

# scripts to run after tests
after_test:

# to run your custom scripts instead of automatic tests
test_script:
  - ctest -D ExperimentalTest -j2 -C %CONFIG% || true
  - ctest -D ExperimentalSubmit -C %CONFIG%

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# scripts to run before deployment
before_deploy:
  # create NSIS installer
  - cpack -G NSIS -C %CONFIG%
  # create binary zip
  - cpack -G ZIP -C %CONFIG%
  # create source zip
  - cpack -G ZIP -C %CONFIG% --config CPackSourceConfig.cmake

# scripts to run after deployment
#after_deploy:

# to run your custom scripts instead of provider deployments
#deploy_script:

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:
  # Deploy to GitHub Releases http://www.appveyor.com/docs/deployment/github
  - provider: GitHub
    auth_token:
      secure: 7HmfZp9O7bVdQo2hRk6FjOUs7jJosftv2rZ6JPBNzjPcAOMXDTvLqv3lvzdAzBfy # your encrypted token from GitHub
    release: myproduct-v$(appveyor_build_version)
    description: 'Release description'
    artifact: /.*\.exe           # upload all NuGet packages to release assets
    draft: false
    prerelease: true
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: false      # deploy on tag push only
