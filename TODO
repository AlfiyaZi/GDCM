I like this kind of printing:
...
| (0045,1032) : FL   Len: 4      <Unknown Tag>                  Value: [     1.000]
| (7FE0,0000) : UL   Len: 4      GroupLength7FE0                Value: [524300]
| (7FE0,0010) : OW   Len: 524288 PixelData                      Value: [OW/OB Binary data]
END-OF-DATASET 


For debugging purpose, it would be nice to allow printing the value offset too.

Remember :
3 levels for message printing :

Warning  : Warns the user when some oddity occured, and we used an heuristics to
           bypass the trouble.
           e.g. : SamplesPerPixel missing, we assume it's a grey level image
                : Pixel Representation missing : we assume 'unsigned'
           (we hope our assumption is OK, but user may disagree.)
		  
Log : we display messages when anything is not Dicom Kosher 
      e.g. : non even length field
           : file is declared as Explicit VR, but a DataElement is Implicit
	   : a file hols illegal groups (0x0005, ...)
    
Debug : We help developper to trace, at a glance, the execution 
        (before refining it with a debugging tool)

Setting ON Debug leads to set ON Warning (but not Log)
Setting ON Log   leads to set ON Warning (but not Debug)
                  
--------
NEED a gdcmDictReader, right now the reading is done in the constructor of gdcm::Dict (this is so retarded)
---------------

TERMINOLOGY:
- SKIP: DICOM has Group Length which allow us to skip elements
- Seek: Read a Group/Element+Length and then *seek* through an element
- Parse: Browse through a DICOM file without loading any information other than the minimum need for it's parsing (almost nothing for ACR, and group 0002 for DICOM)
- Load: Actually load each and every single element of a DICOM file. Very usefull for a PRINT operation
- DUMP/PRINT: Operation that consist of displaying all information (up to a certain level of detail) contained in a DICOM file


http://groups.google.com/group/comp.protocols.dicom/msg/11e953d2c6cab964
Secondary Capture:
See:
        http://www.pixelmed.com/index.html#PixelMedJavaDICOMToolkit
and
        http://www.pixelmed.com/software/javadoc/com/pixelmed/display/DicomIm...


--------------------------
One huge bug, huge problem of design is the fact that one can read a so called DataElememt. This does not exist in DICOM spec, this element is just a design of the class and should not be manipulated ! Reading a DataElement should either be reading an ExplicitELement(Tag,VR,Lenght) or ImplicitElement(Tag,Length) and that 'all. After that comes the problem or readin/skipping the value
This is fixed as of 03/11. Required some hack -par ci par la-, but overall speed is not impacted. One thing I don't like though is that ReadExplicit now should check when reading an end item sequence...
A better approach would be to thwrow an exection when VR does not match expection... but then again this is not the goal of exception since this is a design (will read this value on purpose).
I really hate the ReadMeta approach this should really be rewritten ... when I have some time to loose...
