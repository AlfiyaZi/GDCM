> I have tried the first option you suggest, and it is basically what
 > matlab's dicomwrite does.  Although it works "imaging-wise", one could
 > not do ROI analysis on these DICOMS without dividing the values / 65536.
 >
 > The second option sounds good since, as I understand, any viewer would
 > scale the values from 0 to 1.  The problem is I don't understand it
 > completely.  Could you please refer me to some literature on the subject?

Hi Luis

Many of the DICOM IODs have a means for describing how to scale the
stored pixel values to physical units that have some meaning in the
real world.

The Rescale Slope and Intercept are used in any IOD that include the
Modality LUT Module (which includes those attributes), or specifically
includes the attributes in one of the IOD-specific modules (e.g. the
CT Image Module), or both.

The CR, SC, XA, XRF and RT Image IODs are the only ones that include
the Modality LUT Module.

For CT images, the Rescale Slope and Intercept are specifically included
in the CT Image Module, and the resulting values are required to be in
Hounsfield Units.

For PET images, Rescale Slope is require and Rescale Intercept is
fixed at zero, and the units are specified in Units.

The NM IOD doesn't seem to have any way of specifying units that I can
figure out (Jeff ?), so I assume there images are always in counts.

The Ultrasound IODs do things completely differently, with pixel
components and region calibration, so are not directly relevant here.

Some IODs deliberately "deactivate" the use of this mechanism by making
the values an identity operation and/or specifying a Rescale Type of US
(unspecified). This is because they were thought to have no meaning for
that IODs application, and to prevent people adding the attributes as
a Standard Extended SOP Class which would interfere with the interpretation
of Window Center and Width, which are defined to be applied after Rescale
Slope and Intercept, leading to surprising results when, for example,
Rescale Slope is small, such as in your example of mapping 0-65535 to
0-1.0). For example, the DX and SC multiframe IODs do this.

The XA and XRF IODs are peculiar in that they use the Modality LUT
"backwards", and it should not be applied in the normal manner for
these images. This is a true LUT rather than rescale values anyway,
so is not directly relevant.

The old MR IOD does NOT include the Modality LUT Module or the
Rescale Slope and Intercept, and hence these should not ever be used
in an MR image (for the aforementioned reason of interfering with
the subsequent window application). There are some old Philips devices
that used to send these attributes and cause this problem, but they
don't anymore, I gather.

It would be tempting for you to use the old IOD (my first option in
the earlier email to which you refer), and in addition to add Rescale
Slope and Intercept to describe mapping back to 0:1.0, but that would
not be correct and would break a lot of viewers windowing ability.

The new CT and MR multiframe objects can describe such a transformation
on a per-frame basis, either using the Pixel Value Transformation Macro,
or better yet using the Real World Value Mapping Macro.

The latter allows one to describe the physical units without interfering
with the grayscale rendering pipeline, and with an ability to clearly
specify the units with a coded term.

The figure in PS 3.3 Section C.7.6.16.2.11.1.1 should make this clear.

For general information about the CT and MR multi-frame mechanism
refer to the presentations at:

        ftp://medical.nema.org/MEDICAL/Dicom/SPIE2003/EnhancedMRIWorkshop/

To get back to your specific question, a general-purpose viewer actually
has a pretty hard time of it, if it wants to account for all special
cases, but many will simply take the approach that if Rescale Slope and
Intercept are present, they will apply them (before applying the Window
Center and Width), and if asked to report back pixel values (e.g. when
an ROI has been drawn or the value under the cursor position is being
tracked), will report them either as the stored pixel values, or the
stored pixel values after the Rescale Slope and Intercept have been
applied. Some will know to use the Rescale Type and/or Units to
describe the resulting value's units. More properly, a viewer will
check the IOD to determine how the value should be interpreted.

Note that this general purpose behavior may produce unexpected results,
even if it is entirely correct. For example, some GE PET images apply
Rescale Slope and Intercept and produce a resulting value that is a
small fraction, yet assume the Window Center and Width will be applied
directly to the stored pixel values. The net effect is that some GE
PET images appear black and cannot be windowed on all viewers except
GE's own. The GE images are incorrect in my opinion, but there are
a lot of them out there, and one has to deal with them.

At the present time there are very few, if any, viewers that have
specific support for the CT and MR multiframe images (other than
my own, which was produced specifically to demonstrate these objects);
this means that while many viewers may be able to display such
images, they will not know about the Real World Value Mapping Macro,
and will not take it into account when doing ROIs.

In essence, new viewers that add support for the new multiframe mechanism
will just have to first look for the presence of Real World Value Mapping
Sequences (and/or Pixel Value Transformation Sequences) in the Shared
or Per-frame Functional Groups Sequences, and use the values they find
there, before looking for Rescale Slope and Intercept and Type or Units
at the "top level" of the data set for the "old" objects.

For an example of how I do it, see the Java code in the PixelMed toolkit
for "com.pixelmed.dicom.RealWorldValueTransform.java", at:

        http://www.pixelmed.com/index.html#PixelMedJavaDICOMToolkit

david

PS. The short answer, by the way, is probably to use the existing single
frame MR image and put up with dividing the ROI mean values by 65535 manually.
 