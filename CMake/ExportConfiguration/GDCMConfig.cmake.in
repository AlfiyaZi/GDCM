#-----------------------------------------------------------------------------
#
# GDCMConfig.cmake - CMake configuration file for external projects.
#
# This file is configured by GDCM and used by the UseGDCM.cmake
# module to load GDCM's settings for an external project.
@GDCM_CONFIG_INSTALL_ONLY@
# The GDCM version number.
SET(GDCM_MAJOR_VERSION "@GDCM_MAJOR_VERSION@")
SET(GDCM_MINOR_VERSION "@GDCM_MINOR_VERSION@")
SET(GDCM_BUILD_VERSION "@GDCM_BUILD_VERSION@")

# The libraries.
SET(GDCM_LIBRARIES "@GDCM_LIBRARIES@")

# The CMake macros dir.
SET(GDCM_CMAKE_DIR "@GDCM_CMAKE_DIR_CONFIG@")

# The configuration options.
SET(GDCM_BUILD_SHARED_LIBS "@GDCM_BUILD_SHARED_LIBS@")
SET(GDCM_USE_VTK "@GDCM_USE_VTK@")

# The "use" file.
SET(GDCM_USE_FILE "@GDCM_USE_FILE_CONFIG@")

# The VTK options.
IF(GDCM_USE_VTK)
  SET(GDCM_VTK_DIR "@GDCM_VTK_DIR_CONFIG@")
ENDIF(GDCM_USE_VTK)

get_filename_component(SELF_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
if(EXISTS ${SELF_DIR}/GDCMTargets.cmake)
  # This is an install tree
  include(${SELF_DIR}/GDCMTargets.cmake)
  #get_filename_component(GDCM_INCLUDE_DIRS "${SELF_DIR}/../../@GDCM_INSTALL_INCLUDE_DIR@" ABSOLUTE)
  get_filename_component(GDCM_INCLUDE_ROOT "${SELF_DIR}/../../@GDCM_INSTALL_INCLUDE_DIR@" ABSOLUTE)
  set(GDCM_ENVIRONMENTS ${GDCM_INCLUDE_ROOT}/Environments)
  #set(GDCM_INCLUDE_DIRS ${GDCM_INCLUDE_DIRS} ${GDCM_INCLUDE_DIRS}/csmML)
  set(GDCM_INCLUDE_DIRS ${GDCM_INCLUDE_ROOT})
  foreach(subdir csmML Common Environments Builders IO Concepts)
    set(GDCM_INCLUDE_DIRS ${GDCM_INCLUDE_DIRS} ${GDCM_INCLUDE_ROOT}/${subdir})
  endforeach()
  #set(CODEGENERATOR_EXECUTABLE CodeGenerator)
  GET_TARGET_PROPERTY( CodeGenerator_PATH
    CodeGenerator
    LOCATION
    )
  set(CODEGENERATOR_EXECUTABLE ${CodeGenerator_PATH})
  SET(GDCM_USECMAKE_DIRS    "@CMAKE_INSTALL_PREFIX@/@GDCM_INSTALL_CMAKE_DIR@")

else(EXISTS ${SELF_DIR}/GDCMTargets.cmake)
  if(EXISTS ${SELF_DIR}/GDCMExports.cmake)
    # This is a build tree
    SET( GDCM_INCLUDE_DIRS @GDCM_INCLUDE_PATH@)

    include(${SELF_DIR}/GDCMExports.cmake)

    GET_TARGET_PROPERTY( CodeGenerator_PATH
      CodeGenerator
      LOCATION
      )
    set(CODEGENERATOR_EXECUTABLE ${CodeGenerator_PATH})
    set(GDCM_USECMAKE_DIRS    "@GDCM_BINARY_DIR@")
    set(GDCM_ENVIRONMENTS "@GDCM_SOURCE_DIR@/Code/Environments")

  else(EXISTS ${SELF_DIR}/GDCMExports.cmake)
    message(FATAL_ERROR "ooops")
  endif(EXISTS ${SELF_DIR}/GDCMExports.cmake)
endif(EXISTS ${SELF_DIR}/GDCMTargets.cmake)

set(GDCM_USE_FILE ${SELF_DIR}/UseGDCM.cmake)

# Backward compatible part:
SET(GDCM_FOUND       TRUE)

